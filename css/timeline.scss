---
# jekyll stuff
---
@import "bourbon/bourbon";
@import "carousel";

// variables - colors

$link: #acb7c0; // anchor tags
$background: #e9f0f5; // body background color

$color-1: #303e49; // blue dark
$color-2: #c03b44; // red
$color-3: #ffffff; // white
$color-4: #9ebace; // blue-gray
$color-5: #d7e4ed; // light gray


// mixins - border radius

@mixin border-radius($radius:.25em) {
  border-radius: $radius;
}

// layout - breakpoints

$S:     320px;
$M:     768px;
$L:     1170px;

// layout - media queries

@mixin MQ($canvas) {
  @if $canvas == S {
   @media only screen and (min-width: $S) { @content; }
  }
  @else if $canvas == M {
   @media only screen and (min-width: $M) { @content; }
  }
  @else if $canvas == L {
   @media only screen and (min-width: $L) { @content; }
  }
}

/* --------------------------------

Primary style

-------------------------------- */

html * {
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
}

*, *:after, *:before {
	@include box-sizing(border-box);
}

body {

	background-color: $background;
}

a {
	color: $link;
	text-decoration: none;
}

img {
	max-width: 100%;
}

h1, h2 {
	font-weight: bold;
}

/* --------------------------------

Modules - reusable parts of our design

-------------------------------- */

.cd-container { /* this class is used to give a max-width to the element it is applied to, and center it horizontally when it reaches that max-width */
	width: 90%;
	max-width: $L; // breakpoints inside partials > _layout.scss
	margin: 0 auto;

	&::after { /* clearfix */
		content: '';
		display: table;
		clear: both;
	}
}

/* --------------------------------

Main components

-------------------------------- */



#cd-timeline {
	position: relative;
	padding: 2em 0;
  padding-top: 0;


	&::before {
		/* this is the vertical line */
		content: '';
		position: absolute;
		left: 13px;
    top: 15px;
		height: 100%;
		width: 4px;
		background: darken($background, 5%);
	}

  margin: {
    top: 3em;
    bottom: 2em;
  }

	@include MQ(L) {

		&::before {
			left: 50%;
      top: 15px;
			margin-left: -2px;
		}
	}
}

.cd-timeline-block {
	position: relative;
	margin: 2em 0;
	@include clearfix;

	&:first-child {
		margin-top: 0;
	}

	&:last-child {
		margin-bottom: 0;
	}

	@include MQ(L) {
		margin: -4em 0;

		&:first-child {
			margin-top: 0;
		}

		&:last-child {
			margin-bottom: 0;
		}
	}
}

.cd-timeline-img {
	position: absolute;
	top: 15px;
	left: 0;
	width: 30px;
	height: 30px;
	border-radius: 50%;

	img {
		display: block;
		width: 24px;
		height: 24px;
		position: relative;
		left: 50%;
		top: 50%;
		margin-left: -12px;
		margin-top: -12px;
	}

	&.cd-picture, &.cd-movie, &.cd-location {
    background: $color-4;
    border: 4px solid $color-5;
	}


	@include MQ(L) {
		width: 30px;
		height: 30px;
		left: 50%;
		margin-left: -15px;

		/* Force Hardware Acceleration in WebKit */
		-webkit-transform: translateZ(0);
		-webkit-backface-visibility: hidden;

		.cssanimations &.is-hidden {
			visibility: hidden;
		}

		.cssanimations &.bounce-in {
			visibility: visible;
			@include animation(cd-bounce-1 .6s);
		}
	}
}

@include keyframes(cd-bounce-1) {
	0% {
		opacity: 0;
		@include transform(scale(.5));
	}

	60% {
		opacity: 1;
		@include transform(scale(1.2));
	}

	100% {
		@include transform(scale(1));
	}
}

.cd-timeline-content {
	position: relative;
	margin-left: 60px;
	background: $color-3;
	@include border-radius;
	padding: 1em;
	box-shadow: 0 3px 0 darken($background, 5%);
	@include clearfix;

	p {
		margin: 1em 0;
	}

	&::before {
		content: '';
		position: absolute;
		top: 16px;
		right: 100%;
		height: 0;
		width: 0;
		border: 7px solid transparent;
		border-right: 7px solid $color-3;
	}

	@include MQ(L) {
		margin-left: 0;
		padding: 1.6em;
		width: 45%;

		&::before {
			top: 24px;
			left: 100%;
			border-color: transparent;
			border-left-color: $color-3;
		}

		.cd-timeline-block:nth-child(even) & {
			float: right;

			&::before {
				top: 24px;
				left: auto;
				right: 100%;
				border-color: transparent;
				border-right-color: $color-3;
			}

		}

		.cssanimations &.is-hidden {
			visibility: hidden;
		}

		.cssanimations &.bounce-in {
			visibility: visible;
			@include animation(cd-bounce-2 .6s);
		}
	}
}

@include MQ(L) {
	/* inverse bounce effect on even content blocks */
	.cssanimations .cd-timeline-block:nth-child(even) .cd-timeline-content.bounce-in {
		@include animation(cd-bounce-2-inverse .6s);
	}
}

@include keyframes(cd-bounce-2) {
	0% {
		opacity: 0;
		@include transform(translateX(-100px));
	}

	60% {
		opacity: 1;
		@include transform(translateX(20px));
	}

	100% {
		@include transform(translateX(0));
	}
}

@include keyframes(cd-bounce-2-inverse) {
	0% {
		opacity: 0;
		@include transform(translateX(100px));
	}

	60% {
		opacity: 1;
		@include transform(translateX(-20px));
	}

	100% {
		@include transform(translateX(0));
	}
}
